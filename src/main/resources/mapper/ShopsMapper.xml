<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="project.jinshang.mod_shop.ShopsMapper" >
  <resultMap id="BaseResultMap" type="project.jinshang.mod_shop.bean.Shops" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="memberid" property="memberid" jdbcType="BIGINT" />
    <result column="shopname" property="shopname" jdbcType="VARCHAR" />
    <result column="businesscategory" property="businesscategory" jdbcType="ARRAY" />
    <result column="balance" property="balance" jdbcType="NUMERIC" />
    <result column="freezingamount" property="freezingamount" jdbcType="NUMERIC" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberid, shopname, businesscategory, balance, freezingamount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="project.jinshang.mod_shop.bean.ShopsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shops
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from shops
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from shops
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="project.jinshang.mod_shop.bean.Shops" >
    insert into shops (id, memberid, shopname, 
      businesscategory, balance, freezingamount
      )
    values (#{id,jdbcType=BIGINT}, #{memberid,jdbcType=BIGINT}, #{shopname,jdbcType=VARCHAR}, 
      #{businesscategory,jdbcType=ARRAY}, #{balance,jdbcType=NUMERIC}, #{freezingamount,jdbcType=NUMERIC}
      )
  </insert>
  <insert id="insertSelective" parameterType="project.jinshang.mod_shop.bean.Shops" >
    insert into shops
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberid != null" >
        memberid,
      </if>
      <if test="shopname != null" >
        shopname,
      </if>
      <if test="businesscategory != null" >
        businesscategory,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="freezingamount != null" >
        freezingamount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="shopname != null" >
        #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="businesscategory != null" >
        #{businesscategory,jdbcType=ARRAY},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=NUMERIC},
      </if>
      <if test="freezingamount != null" >
        #{freezingamount,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="project.jinshang.mod_shop.bean.ShopsExample" resultType="java.lang.Integer" >
    select count(*) from shops
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shops
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberid != null" >
        memberid = #{record.memberid,jdbcType=BIGINT},
      </if>
      <if test="record.shopname != null" >
        shopname = #{record.shopname,jdbcType=VARCHAR},
      </if>
      <if test="record.businesscategory != null" >
        businesscategory = #{record.businesscategory,jdbcType=ARRAY},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=NUMERIC},
      </if>
      <if test="record.freezingamount != null" >
        freezingamount = #{record.freezingamount,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shops
    set id = #{record.id,jdbcType=BIGINT},
      memberid = #{record.memberid,jdbcType=BIGINT},
      shopname = #{record.shopname,jdbcType=VARCHAR},
      businesscategory = #{record.businesscategory,jdbcType=ARRAY},
      balance = #{record.balance,jdbcType=NUMERIC},
      freezingamount = #{record.freezingamount,jdbcType=NUMERIC}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="project.jinshang.mod_shop.bean.Shops" >
    update shops
    <set >
      <if test="memberid != null" >
        memberid = #{memberid,jdbcType=BIGINT},
      </if>
      <if test="shopname != null" >
        shopname = #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="businesscategory != null" >
        businesscategory = #{businesscategory,jdbcType=ARRAY},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=NUMERIC},
      </if>
      <if test="freezingamount != null" >
        freezingamount = #{freezingamount,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="project.jinshang.mod_shop.bean.Shops" >
    update shops
    set memberid = #{memberid,jdbcType=BIGINT},
      shopname = #{shopname,jdbcType=VARCHAR},
      businesscategory = #{businesscategory,jdbcType=ARRAY},
      balance = #{balance,jdbcType=NUMERIC},
      freezingamount = #{freezingamount,jdbcType=NUMERIC}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>