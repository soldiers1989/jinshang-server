<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="project.jinshang.mod_member.MemberRateSettingMapper" >
  <resultMap id="BaseResultMap" type="project.jinshang.mod_member.bean.MemberRateSetting" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="memberid" property="memberid" jdbcType="BIGINT" />
    <result column="membergradeid" property="membergradeid" jdbcType="BIGINT" />
    <result column="levelid" property="levelid" jdbcType="BIGINT" />
    <result column="parentlevelid" property="parentlevelid" jdbcType="BIGINT" />
    <result column="rate" property="rate" jdbcType="NUMERIC" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberid, membergradeid, levelid, parentlevelid, rate, remark, sort, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="project.jinshang.mod_member.bean.MemberRateSettingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from memberratesetting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from memberratesetting
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from memberratesetting
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="project.jinshang.mod_member.bean.MemberRateSettingExample" >
    delete from memberratesetting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="project.jinshang.mod_member.bean.MemberRateSetting" >
    insert into memberratesetting (memberid, membergradeid,
      levelid, parentlevelid, rate, 
      remark, sort, updatetime
      )
    values (#{memberid,jdbcType=BIGINT}, #{membergradeid,jdbcType=BIGINT},
      #{levelid,jdbcType=BIGINT}, #{parentlevelid,jdbcType=BIGINT}, #{rate,jdbcType=NUMERIC}, 
      #{remark,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="project.jinshang.mod_member.bean.MemberRateSetting" >
    insert into memberratesetting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberid != null" >
        memberid,
      </if>
      <if test="membergradeid != null" >
        membergradeid,
      </if>
      <if test="levelid != null" >
        levelid,
      </if>
      <if test="parentlevelid != null" >
        parentlevelid,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="membergradeid != null" >
        #{membergradeid,jdbcType=BIGINT},
      </if>
      <if test="levelid != null" >
        #{levelid,jdbcType=BIGINT},
      </if>
      <if test="parentlevelid != null" >
        #{parentlevelid,jdbcType=BIGINT},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=NUMERIC},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="project.jinshang.mod_member.bean.MemberRateSettingExample" resultType="java.lang.Integer" >
    select count(*) from memberratesetting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update memberratesetting
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberid != null" >
        memberid = #{record.memberid,jdbcType=BIGINT},
      </if>
      <if test="record.membergradeid != null" >
        membergradeid = #{record.membergradeid,jdbcType=BIGINT},
      </if>
      <if test="record.levelid != null" >
        levelid = #{record.levelid,jdbcType=BIGINT},
      </if>
      <if test="record.parentlevelid != null" >
        parentlevelid = #{record.parentlevelid,jdbcType=BIGINT},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=NUMERIC},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update memberratesetting
    set id = #{record.id,jdbcType=BIGINT},
      memberid = #{record.memberid,jdbcType=BIGINT},
      membergradeid = #{record.membergradeid,jdbcType=BIGINT},
      levelid = #{record.levelid,jdbcType=BIGINT},
      parentlevelid = #{record.parentlevelid,jdbcType=BIGINT},
      rate = #{record.rate,jdbcType=NUMERIC},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="project.jinshang.mod_member.bean.MemberRateSetting" >
    update memberratesetting
    <set >
      <if test="memberid != null" >
        memberid = #{memberid,jdbcType=BIGINT},
      </if>
      <if test="membergradeid != null" >
        membergradeid = #{membergradeid,jdbcType=BIGINT},
      </if>
      <if test="levelid != null" >
        levelid = #{levelid,jdbcType=BIGINT},
      </if>
      <if test="parentlevelid != null" >
        parentlevelid = #{parentlevelid,jdbcType=BIGINT},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=NUMERIC},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="project.jinshang.mod_member.bean.MemberRateSetting" >
    update memberratesetting
    set memberid = #{memberid,jdbcType=BIGINT},
      membergradeid = #{membergradeid,jdbcType=BIGINT},
      levelid = #{levelid,jdbcType=BIGINT},
      parentlevelid = #{parentlevelid,jdbcType=BIGINT},
      rate = #{rate,jdbcType=NUMERIC},
      remark = #{remark,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>